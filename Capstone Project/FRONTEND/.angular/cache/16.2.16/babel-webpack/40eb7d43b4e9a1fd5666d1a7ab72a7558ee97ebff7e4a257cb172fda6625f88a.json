{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component } from '@angular/core';\nexport let CartComponent = class CartComponent {\n  constructor(cart) {\n    this.cart = cart;\n    this.items = [];\n    this.cartTotal = 0;\n    this.placeholder = 'https://via.placeholder.com/150x120?text=No+Image';\n  }\n  ngOnInit() {\n    this.cart.items$.subscribe(res => {\n      this.items = res;\n      this.calculateTotal();\n    });\n  }\n  save(it) {\n    this.cart.updateQuantity(it.product.id, it.quantity);\n    this.calculateTotal();\n  }\n  del(it) {\n    this.cart.remove(it.product.id);\n    this.calculateTotal();\n  }\n  checkout() {\n    if (!this.items.length) {\n      alert(\"Your cart is empty!\");\n      return;\n    }\n    alert(\"‚úÖ Order placed successfully!\");\n    this.cart.clear();\n    this.cartTotal = 0;\n  }\n  updateTotal(it) {\n    if (it.quantity < 1) it.quantity = 1;\n    this.cart.updateQuantity(it.product.id, it.quantity);\n    this.calculateTotal();\n  }\n  calculateTotal() {\n    this.cartTotal = this.items.reduce((sum, item) => sum + (item.product?.price || 0) * item.quantity, 0);\n  }\n  onImgError(event) {\n    event.target.src = this.placeholder;\n  }\n};\nCartComponent = __decorate([Component({\n  selector: 'cart',\n  template: `\n<h3 class=\"text-center my-4 fw-bold\">My Cart</h3>\n\n<div class=\"row g-4 justify-content-center\">\n  <div class=\"col-12 col-sm-6 col-md-4 col-lg-3\" *ngFor=\"let it of items\">\n    <div class=\"card h-100 cart-card shadow-sm p-3\">\n      <!-- Product Image -->\n      <div class=\"card-img-wrapper mb-2\">\n        <img [src]=\"it.product?.image || placeholder\" \n             alt=\"{{it.product?.name}}\" \n             (error)=\"onImgError($event)\">\n      </div>\n\n      <div class=\"card-body d-flex flex-column\">\n        <h6 class=\"fw-semibold text-truncate mb-1\" [title]=\"it.product?.name\">\n          {{ it.product?.name }}\n        </h6>\n        <p class=\"text-primary fw-bold mb-1\">Price: ‚Çπ {{ it.product?.price }}</p>\n        <p class=\"text-success fw-bold mb-2\">\n          Total: ‚Çπ {{ (it.product?.price || 0) * it.quantity }}\n        </p>\n\n        <!-- Quantity Control -->\n        <div class=\"d-flex align-items-center mb-3\">\n          <label class=\"me-2 mb-0\">Qty:</label>\n          <input type=\"number\" [(ngModel)]=\"it.quantity\" min=\"1\"\n                 class=\"form-control form-control-sm text-center\"\n                 style=\"max-width:80px\"\n                 (change)=\"updateTotal(it)\">\n        </div>\n\n        <div class=\"mt-auto d-flex justify-content-between\">\n          <button class=\"btn btn-gradient btn-sm w-50 me-1\" (click)=\"save(it)\">üíæ Save</button>\n          <button class=\"btn btn-danger btn-sm w-50 ms-1\" (click)=\"del(it)\">üóëÔ∏è Remove</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Cart Total -->\n<div *ngIf=\"items.length\" class=\"text-end mt-4\">\n  <h5 class=\"fw-bold\">Cart Total: ‚Çπ {{ cartTotal }}</h5>\n  <button class=\"btn btn-success btn-lg gradient-btn mt-2 px-4\" (click)=\"checkout()\">\n    ‚úÖ Checkout\n  </button>\n</div>\n\n<!-- Empty Cart -->\n<div *ngIf=\"!items.length\" class=\"text-center my-5\">\n  <div class=\"alert alert-info shadow-sm\">Your cart is empty</div>\n</div>\n  `,\n  styles: [`\n.cart-card {\n  border-radius: 0.6rem;\n  background-color: #fff;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n}\n.cart-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 8px 20px rgba(0,0,0,0.2);\n}\n.card-img-wrapper {\n  height: 180px;\n  background: #f9f9f9;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  border-radius: 0.5rem;\n}\n.card-img-wrapper img {\n  max-height: 100%;\n  max-width: 100%;\n  object-fit: contain;\n  transition: transform 0.3s ease;\n}\n.cart-card:hover .card-img-wrapper img {\n  transform: scale(1.05);\n}\n.btn-gradient {\n  background: linear-gradient(90deg, #ff6a00, #ee0979);\n  color: #fff;\n  font-weight: 500;\n  border: none;\n}\n.btn-gradient:hover { opacity: 0.9; }\n.gradient-btn {\n  background: linear-gradient(90deg, #1e3c72, #2a5298);\n  color: #fff;\n  font-weight: 600;\n  border: none;\n}\n.gradient-btn:hover { opacity: 0.9; }\n@media (max-width: 768px) { .card-img-wrapper { height: 140px; } }\n@media (max-width: 576px) {\n  .btn-gradient, .gradient-btn { font-size: 0.85rem; padding: 0.4rem 0.8rem; }\n  .cart-card { padding: 1rem; }\n}\n  `]\n})], CartComponent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}